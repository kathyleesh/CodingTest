'''
작성자 : 서현

작성일자 : 2022.04.04

작성내용 : 
* 문제 : 매일 아침, 세준이는 학교에 가기 위해서 차를 타고 D킬로미터 길이의 고속도로를 지난다. 이 고속도로는 심각하게 커브가 많아서 정말 운전하기도 힘들다. 
        어느 날, 세준이는 이 고속도로에 지름길이 존재한다는 것을 알게 되었다. 모든 지름길은 일방통행이고, 고속도로를 역주행할 수는 없다.
        세준이가 운전해야 하는 거리의 최솟값을 출력하시오.

* 입력 : 첫째 줄에 지름길의 개수 N과 고속도로의 길이 D가 주어진다. N은 12 이하인 양의 정수이고, D는 10,000보다 작거나 같은 자연수이다. 
        다음 N개의 줄에 지름길의 시작 위치, 도착 위치, 지름길의 길이가 주어진다. 모든 위치와 길이는 10,000보다 작거나 같은 음이 아닌 정수이다. 
        지름길의 시작 위치는 도착 위치보다 작다.

* 출력 : 세준이가 운전해야하는 거리의 최솟값을 출력하시오.

* 예제 : 입력                       출력
       --------------------     -----------
        5 150                     70
        0 50 10
        0 50 20
        50 100 10
        100 151 10
        110 140 90
        
todo :
1) 지름길의 개수 N과 고속도로의 길이 D를 입력받는다.
2) 지름길의 시작 위치, 도착 위치, 지름길의 길이를 N개 만큼 입력 받아 arr[] 배열에 넣는다.
3) 시작 위치 기준으로 오름차순 정렬을 한다.
4) 1씩 증가 하면서 탐색하고 지름길 위치와 같아지면 길이를 비교하여 최소 길이로 대체하여 최종 탐색을 마쳤을 때 거리를 구한다.
5) 최종 길이보다 지름길의 도착 위치가 너 멀면 고려 하지 않는다.

'''
N, D = map(int, input().split())
arr = []
result = 0

for i in range(N):
    start, end, distance = map(int, input().split())
    arr.append([start, end, distance])
    arr.sort(key=lambda x: x[0])

search = [i for i in range(D+1)]

for i in range(D+1):
    for start, end, distance in arr:
        search[i] = min(search[i], search[i-1]+1)
        if start == i and end <= D and distance < search[end] - search[start]:
            search[end] = search[i] + distance

print(search[D])
