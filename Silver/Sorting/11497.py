'''
작성자 : 서현

작성일자 : 2022.03.08

작성내용 : 남규는 통나무를 세워 놓고 건너뛰기를 좋아한다. 그래서 N개의 통나무를 원형으로 세워 놓고 뛰어놀려고 한다. 남규는 원형으로 인접한 옆 통나무로 건너뛰는데, 
이때 각 인접한 통나무의 높이 차가 최소가 되게 하려 한다. 통나무 건너뛰기의 난이도는 인접한 두 통나무 간의 높이의 차의 최댓값으로 결정된다. 높이가 {2, 4, 5, 7, 9}인
통나무들을 세우려 한다고 가정하자. 이를 [2, 9, 7, 4, 5]의 순서로 세웠다면, 가장 첫 통나무와 가장 마지막 통나무 역시 인접해 있다. 즉, 높이가 2인 것과 높이가 5인 것도
서로 인접해 있다. 배열 [2, 9, 7, 4, 5]의 난이도는 |2-9| = 7이다. 우리는 더 나은 배열 [2, 5, 9, 7, 4]를 만들 수 있으며 이 배열의 난이도는 |5-9| = 4이다. 
이 배열보다 난이도가 낮은 배열은 만들 수 없으므로 이 배열이 남규가 찾는 답이 된다.
입력은 T개의 테스트 케이스로 이루어져 있다. 첫 줄에 T가 주어진다.
이어지는 각 줄마다 첫 줄에 통나무의 개수를 나타내는 정수 N(5 ≤ N ≤ 10,000), 둘째 줄에 각 통나무의 높이를 나타내는 정수 Li가 주어진다. (1 ≤ Li ≤ 100,000)
각 테스트 케이스마다 한 줄에 주어진 통나무들로 만들 수 있는 최소 난이도를 출력하시오.

todo :
1) N = 통나무의 개수를 입력받고 N개의 통나무의 높이를 입력받는다.
2) 입력받은 통나무의 높이를 순서대로 정렬한다. 
3) 각 인접한 통나무의 높이 차가 최소가 되게 하려면 크기가 작은 순서대로 앞과 뒤에 번갈아 두면서 바깥쪽부터 가운데쪽으로 채워나가면 된다.
4) 즉 인덱스가 2차이 나도록 배열한 수 높이 차를 구하면 최소 난이도를 알 수 있다.

'''

from sys import stdin

T = int(input())
result_list = []

for i in range(T):
    N = int(input())
    log = list(map(int, stdin.readline().split()))
    log.sort()

    result = 0
    for i in range(2, N):
        result = max(result, abs(log[i] - log[i-2]))
    
    result_list.append(result)

for i in result_list:
    print(i)